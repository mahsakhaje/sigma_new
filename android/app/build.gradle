plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// بارگذاری تنظیمات local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// بارگذاری تنظیمات keystore
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "ir.sigmatec.sigma"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        compileSdkVersion 34

        applicationId "ir.sigmatec.sigma"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // تنظیمات signing
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    // تعریف Product Flavors
    flavorDimensions "store"

    productFlavors {
        cafebazaar {
            dimension "store"


            buildConfigField "String", "STORE_TYPE", '"cafebazaar"'
            buildConfigField "String", "STORE_NAME", '"کافه بازار"'
            buildConfigField "String", "STORE_PACKAGE", '"com.farsitel.bazaar"'
        }

        myket {
            dimension "store"


            buildConfigField "String", "STORE_TYPE", '"myket"'
            buildConfigField "String", "STORE_NAME", '"مایکت"'
            buildConfigField "String", "STORE_PACKAGE", '"ir.mservices.market"'
        }

        googleplay {
            dimension "store"


            buildConfigField "String", "STORE_TYPE", '"googleplay"'
            buildConfigField "String", "STORE_NAME", '"Google Play"'
            buildConfigField "String", "STORE_PACKAGE", '"com.android.vending"'
        }

        universal {
            dimension "store"


            buildConfigField "String", "STORE_TYPE", '"auto"'
            buildConfigField "String", "STORE_NAME", '"خودکار"'
            buildConfigField "String", "STORE_PACKAGE", '""'
        }
    }

    buildTypes {
        release {
            // استفاده از کلید signing برای release
            signingConfig keystoreProperties['storeFile'] ? signingConfigs.release : signingConfigs.debug

            // بهینه‌سازی
            minifyEnabled false
            shrinkResources false

            // ProGuard
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // تنظیمات اضافی
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }
    }
}

flutter {
    source '../..'
}

dependencies {}